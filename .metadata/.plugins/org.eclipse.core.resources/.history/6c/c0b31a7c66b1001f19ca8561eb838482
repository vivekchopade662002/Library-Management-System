package com.library.servlet;

import java.io.IOException;
import java.net.URLEncoder;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import com.library.model.DBConnection;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@WebServlet(name = "SignUpServlet", urlPatterns = {"/SignUpServlet"})
public class SignUpServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    @Override
    public void init() throws ServletException {
        super.init();
        System.out.println("SignUpServlet initialized!");
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        System.out.println("\n=== SignUpServlet doPost started ===");
        System.out.println("Request URI: " + request.getRequestURI());
        System.out.println("Context Path: " + request.getContextPath());
        
        System.out.println("SignUpServlet: Starting user registration...");
        String username = request.getParameter("username");
        String password = request.getParameter("password");
        System.out.println("Received parameters - Username: " + username);
        
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            // Validate input
            if (username == null || username.trim().isEmpty() || 
                password == null || password.trim().isEmpty()) {
                throw new SQLException("Username and password are required");
            }

            System.out.println("Attempting database connection...");
            conn = DBConnection.getConnection();
            if (conn == null) {
                throw new SQLException("Failed to establish database connection");
            }
            System.out.println("Database connection successful");

            // First check if username exists
            String checkSql = "SELECT username FROM users WHERE username = ?";
            pstmt = conn.prepareStatement(checkSql);
            pstmt.setString(1, username);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                throw new SQLException("Username already exists");
            }

            // Close the first prepared statement
            pstmt.close();

            // Insert new user
            String sql = "INSERT INTO users (username, password) VALUES (?, ?)";
            System.out.println("Preparing SQL statement: " + sql);
            
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, username);
            pstmt.setString(2, password);

            System.out.println("Executing SQL insert...");
            int rowsAffected = pstmt.executeUpdate();
            System.out.println("Rows affected: " + rowsAffected);
            
            if (rowsAffected > 0) {
                System.out.println("Registration successful!");
                response.sendRedirect("login.jsp?message=" + URLEncoder.encode("Registration successful! Please login.", "UTF-8"));
            } else {
                throw new SQLException("Insert failed, no rows affected.");
            }

        } catch (SQLException e) {
            System.out.println("SQL Error occurred: " + e.getMessage());
            e.printStackTrace();
            String errorMessage = "Registration failed! Error: " + e.getMessage();
            System.out.println(errorMessage);
            response.sendRedirect("signup.jsp?message=" + URLEncoder.encode(errorMessage, "UTF-8"));
        } finally {
            try {
                if (rs != null) {
                    rs.close();
                    System.out.println("ResultSet closed");
                }
                if (pstmt != null) {
                    pstmt.close();
                    System.out.println("PreparedStatement closed");
                }
                if (conn != null) {
                    conn.close();
                    System.out.println("Connection closed");
                }
            } catch (SQLException e) {
                System.out.println("Error closing resources: " + e.getMessage());
                e.printStackTrace();
            }
            System.out.println("=== SignUpServlet doPost completed ===\n");
        }
    }
}
