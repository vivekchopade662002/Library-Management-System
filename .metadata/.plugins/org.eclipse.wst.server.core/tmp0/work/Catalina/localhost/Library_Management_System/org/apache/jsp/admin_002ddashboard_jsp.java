/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-05 06:57:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import com.library.model.DBConnection;

public final class admin_002ddashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.library.model.DBConnection");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    // Check if user is logged in and is admin
    String userType = (String) session.getAttribute("userType");
    if (userType == null || !userType.equals("admin")) {
        response.sendRedirect("index.jsp");
        return;
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Admin Dashboard - Library Management System</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            background: linear-gradient(135deg, #1a1a2e, #16213e);\n");
      out.write("            color: #d1d5db;\n");
      out.write("            min-height: 100vh;\n");
      out.write("        }\n");
      out.write("        .navbar {\n");
      out.write("            background: rgba(0, 0, 0, 0.2) !important;\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("        }\n");
      out.write("        .card {\n");
      out.write("            background: rgba(255, 255, 255, 0.06);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.08);\n");
      out.write("            border-radius: 12px;\n");
      out.write("            transition: transform 0.3s ease, box-shadow 0.3s ease;\n");
      out.write("        }\n");
      out.write("        .card:hover {\n");
      out.write("            transform: translateY(-5px);\n");
      out.write("            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n");
      out.write("        }\n");
      out.write("        .dashboard-card {\n");
      out.write("            cursor: pointer;\n");
      out.write("            height: 100%;\n");
      out.write("            color: #ffffff;\n");
      out.write("        }\n");
      out.write("        .dashboard-card .icon {\n");
      out.write("            font-size: 2.5rem;\n");
      out.write("            margin-bottom: 1rem;\n");
      out.write("        }\n");
      out.write("        .dashboard-card.users {\n");
      out.write("            background: linear-gradient(135deg, #4834d4, #686de0);\n");
      out.write("            border: none;\n");
      out.write("        }\n");
      out.write("        .dashboard-card.books {\n");
      out.write("            background: linear-gradient(135deg, #2ecc71, #27ae60);\n");
      out.write("            border: none;\n");
      out.write("        }\n");
      out.write("        .dashboard-card.purchases {\n");
      out.write("            background: linear-gradient(135deg, #e74c3c, #c0392b);\n");
      out.write("            border: none;\n");
      out.write("        }\n");
      out.write("        .dashboard-card.revenue {\n");
      out.write("            background: linear-gradient(135deg, #f1c40f, #f39c12);\n");
      out.write("            border: none;\n");
      out.write("        }\n");
      out.write("        .stat-value {\n");
      out.write("            font-size: 2rem;\n");
      out.write("            font-weight: bold;\n");
      out.write("            margin-bottom: 0.5rem;\n");
      out.write("            color: #ffffff;\n");
      out.write("        }\n");
      out.write("        .card-title {\n");
      out.write("            color: #ffffff;\n");
      out.write("            font-weight: 600;\n");
      out.write("            font-size: 1.25rem;\n");
      out.write("        }\n");
      out.write("        .card-text {\n");
      out.write("            color: rgba(255, 255, 255, 0.9);\n");
      out.write("            font-size: 1rem;\n");
      out.write("        }\n");
      out.write("        .dashboard-card:hover {\n");
      out.write("            transform: translateY(-5px);\n");
      out.write("            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n");
      out.write("            opacity: 0.9;\n");
      out.write("        }\n");
      out.write("        .icon.text-primary, .icon.text-success, .icon.text-danger, .icon.text-warning,\n");
      out.write("        .stat-value.text-primary, .stat-value.text-success, .stat-value.text-danger, .stat-value.text-warning {\n");
      out.write("            color: #ffffff !important;\n");
      out.write("        }\n");
      out.write("        /* Top Selling Books Table Styles */\n");
      out.write("        .top-books-card {\n");
      out.write("            background: linear-gradient(135deg, rgba(44, 62, 80, 0.9), rgba(52, 73, 94, 0.9));\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("            border-radius: 12px;\n");
      out.write("            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n");
      out.write("            margin-bottom: 1rem;\n");
      out.write("            max-width: 1700px;\n");
      out.write("            margin-left: auto;\n");
      out.write("            margin-right: auto;\n");
      out.write("        }\n");
      out.write("        .top-books-card .card-header {\n");
      out.write("            background: rgba(255, 255, 255, 0.05);\n");
      out.write("            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("            padding: 0.8rem 1rem;\n");
      out.write("            border-radius: 12px 12px 0 0;\n");
      out.write("        }\n");
      out.write("        .top-books-card .card-header h4 {\n");
      out.write("            color: #ffffff;\n");
      out.write("            font-weight: 600;\n");
      out.write("            margin: 0;\n");
      out.write("            font-size: 1.1rem;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("        }\n");
      out.write("        .top-books-card .card-header h4 i {\n");
      out.write("            color: #f1c40f;\n");
      out.write("            margin-right: 0.5rem;\n");
      out.write("            font-size: 1.2rem;\n");
      out.write("        }\n");
      out.write("        .top-books-card .table {\n");
      out.write("            color: #ffffff;\n");
      out.write("            margin: 0;\n");
      out.write("            font-size: 0.9rem;\n");
      out.write("        }\n");
      out.write("        .top-books-card .table thead th {\n");
      out.write("            background: rgba(0, 0, 0, 0.2);\n");
      out.write("            color: #ffffff;\n");
      out.write("            font-weight: 600;\n");
      out.write("            padding: 0.7rem 1rem;\n");
      out.write("            border: none;\n");
      out.write("            font-size: 0.9rem;\n");
      out.write("        }\n");
      out.write("        .top-books-card .table tbody td {\n");
      out.write("            padding: 0.7rem 1rem;\n");
      out.write("            border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n");
      out.write("            vertical-align: middle;\n");
      out.write("        }\n");
      out.write("        .top-books-card .badge {\n");
      out.write("            padding: 0.4rem 0.8rem;\n");
      out.write("            font-weight: 500;\n");
      out.write("            font-size: 0.85rem;\n");
      out.write("        }\n");
      out.write("        .top-books-card .badge.bg-warning {\n");
      out.write("            background: linear-gradient(135deg, #f1c40f, #f39c12) !important;\n");
      out.write("            box-shadow: 0 2px 4px rgba(243, 156, 18, 0.2);\n");
      out.write("        }\n");
      out.write("        .top-books-card .badge.bg-info {\n");
      out.write("            background: linear-gradient(135deg, #3498db, #2980b9) !important;\n");
      out.write("            box-shadow: 0 2px 4px rgba(52, 152, 219, 0.2);\n");
      out.write("        }\n");
      out.write("        .top-books-card .badge.bg-success {\n");
      out.write("            background: linear-gradient(135deg, #2ecc71, #27ae60) !important;\n");
      out.write("            box-shadow: 0 2px 4px rgba(46, 204, 113, 0.2);\n");
      out.write("        }\n");
      out.write("        .top-books-card .badge.bg-secondary {\n");
      out.write("            background: linear-gradient(135deg, #95a5a6, #7f8c8d) !important;\n");
      out.write("            box-shadow: 0 2px 4px rgba(127, 140, 141, 0.2);\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <!-- Navigation Bar -->\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-dark\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <a class=\"navbar-brand\" href=\"#\">Library Management System</a>\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("            </button>\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("                <ul class=\"navbar-nav ms-auto\">\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"home.jsp\">\n");
      out.write("                            <i class=\"fas fa-home me-2\"></i>Home\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"viewbooks.jsp\">\n");
      out.write("                            <i class=\"fas fa-book-open me-2\"></i>View Books\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"addbook.jsp\">\n");
      out.write("                            <i class=\"fas fa-plus-circle me-2\"></i>Add Book\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"update.jsp\">\n");
      out.write("                            <i class=\"fas fa-edit me-2\"></i>Update Book\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"search.jsp\">\n");
      out.write("                            <i class=\"fas fa-search me-2\"></i>Search Books\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"delete.jsp\">\n");
      out.write("                            <i class=\"fas fa-trash me-2\"></i>Delete Book\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"LogoutServlet\">\n");
      out.write("                            <i class=\"fas fa-sign-out-alt me-2\"></i>Logout\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("\n");
      out.write("    <div class=\"container mt-4\">\n");
      out.write("        <h2 class=\"mb-4\"><i class=\"fas fa-tachometer-alt me-2\"></i>Admin Dashboard</h2>\n");
      out.write("        \n");
      out.write("        <div class=\"row g-4\">\n");
      out.write("            <!-- User Management Card -->\n");
      out.write("            <div class=\"col-md-6 col-lg-3\">\n");
      out.write("                <div class=\"card dashboard-card users\" onclick=\"window.location.href='user-management.jsp'\">\n");
      out.write("                    <div class=\"card-body text-center\">\n");
      out.write("                        <div class=\"icon text-primary\">\n");
      out.write("                            <i class=\"fas fa-users\"></i>\n");
      out.write("                        </div>\n");
      out.write("                        ");

                            int userCount = 0;
                            try (Connection conn = DBConnection.getConnection()) {
                                Statement stmt = conn.createStatement();
                                ResultSet rs = stmt.executeQuery("SELECT COUNT(*) as count FROM users");
                                if(rs.next()) {
                                    userCount = rs.getInt("count");
                                }
                            } catch(Exception e) { }
                        
      out.write("\n");
      out.write("                        <div class=\"stat-value text-primary\">");
      out.print( userCount );
      out.write("</div>\n");
      out.write("                        <h5 class=\"card-title mb-0\">User Management</h5>\n");
      out.write("                        <p class=\"card-text mt-2\">Manage system users and roles</p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Book Management Card -->\n");
      out.write("            <div class=\"col-md-6 col-lg-3\">\n");
      out.write("                <div class=\"card dashboard-card books\" onclick=\"window.location.href='book-management.jsp'\">\n");
      out.write("                    <div class=\"card-body text-center\">\n");
      out.write("                        <div class=\"icon text-success\">\n");
      out.write("                            <i class=\"fas fa-book\"></i>\n");
      out.write("                        </div>\n");
      out.write("                        ");

                            int bookCount = 0;
                            try (Connection conn = DBConnection.getConnection()) {
                                Statement stmt = conn.createStatement();
                                ResultSet rs = stmt.executeQuery("SELECT COUNT(*) as count FROM books");
                                if(rs.next()) {
                                    bookCount = rs.getInt("count");
                                }
                            } catch(Exception e) { }
                        
      out.write("\n");
      out.write("                        <div class=\"stat-value text-success\">");
      out.print( bookCount );
      out.write("</div>\n");
      out.write("                        <h5 class=\"card-title mb-0\">Book Management</h5>\n");
      out.write("                        <p class=\"card-text mt-2\">Manage library books</p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Purchase History Card -->\n");
      out.write("            <div class=\"col-md-6 col-lg-3\">\n");
      out.write("                <div class=\"card dashboard-card purchases\" onclick=\"window.location.href='purchase-history.jsp'\">\n");
      out.write("                    <div class=\"card-body text-center\">\n");
      out.write("                        <div class=\"icon text-danger\">\n");
      out.write("                            <i class=\"fas fa-history\"></i>\n");
      out.write("                        </div>\n");
      out.write("                        ");

                            int purchaseCount = 0;
                            try (Connection conn = DBConnection.getConnection()) {
                                Statement stmt = conn.createStatement();
                                ResultSet rs = stmt.executeQuery("SELECT COUNT(*) as count FROM purchase_history");
                                if(rs.next()) {
                                    purchaseCount = rs.getInt("count");
                                }
                            } catch(Exception e) { }
                        
      out.write("\n");
      out.write("                        <div class=\"stat-value text-danger\">");
      out.print( purchaseCount );
      out.write("</div>\n");
      out.write("                        <h5 class=\"card-title mb-0\">Purchase History</h5>\n");
      out.write("                        <p class=\"card-text mt-2\">View all transactions</p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Revenue Card -->\n");
      out.write("            <div class=\"col-md-6 col-lg-3\">\n");
      out.write("                <div class=\"card dashboard-card revenue\">\n");
      out.write("                    <div class=\"card-body text-center\">\n");
      out.write("                        <div class=\"icon text-warning\">\n");
      out.write("                            <i class=\"fas fa-dollar-sign\"></i>\n");
      out.write("                        </div>\n");
      out.write("                        ");

                            double totalRevenue = 0;
                            try (Connection conn = DBConnection.getConnection()) {
                                Statement stmt = conn.createStatement();
                                ResultSet rs = stmt.executeQuery("SELECT SUM(price) as total FROM purchase_history");
                                if(rs.next()) {
                                    totalRevenue = rs.getDouble("total");
                                }
                            } catch(Exception e) { }
                        
      out.write("\n");
      out.write("                        <div class=\"stat-value text-warning\">$");
      out.print( String.format("%.2f", totalRevenue) );
      out.write("</div>\n");
      out.write("                        <h5 class=\"card-title mb-0\">Total Revenue</h5>\n");
      out.write("                        <p class=\"card-text mt-2\">Overall earnings</p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Top Selling Books Section -->\n");
      out.write("    <div class=\"row mt-4\">\n");
      out.write("        <div class=\"col-12 col-xl-10 mx-auto\">\n");
      out.write("            <div class=\"card top-books-card\">\n");
      out.write("                <div class=\"card-header\">\n");
      out.write("                    <h4><i class=\"fas fa-star me-2\"></i>Top Selling Books</h4>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"card-body\">\n");
      out.write("                    <div class=\"table-responsive\">\n");
      out.write("                        <table class=\"table\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th><i class=\"fas fa-hashtag me-2\"></i>Rank</th>\n");
      out.write("                                    <th><i class=\"fas fa-book me-2\"></i>Book Name</th>\n");
      out.write("                                    <th><i class=\"fas fa-user me-2\"></i>Author</th>\n");
      out.write("                                    <th><i class=\"fas fa-shopping-cart me-2\"></i>Total Sales</th>\n");
      out.write("                                    <th><i class=\"fas fa-dollar-sign me-2\"></i>Revenue Generated</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                ");

                                    try (Connection topBooksConn = DBConnection.getConnection();
                                         Statement topBooksStmt = topBooksConn.createStatement()) {
                                        String topBooksSql = 
                                            "SELECT b.name as book_name, b.author, " +
                                            "COUNT(ph.id) as total_sales, " +
                                            "SUM(ph.price) as total_revenue " +
                                            "FROM books b " +
                                            "JOIN purchase_history ph ON b.id = ph.book_id " +
                                            "GROUP BY b.id, b.name, b.author " +
                                            "ORDER BY total_sales DESC " +
                                            "LIMIT 5";
                                        
                                        ResultSet topBooksRs = topBooksStmt.executeQuery(topBooksSql);
                                        int rank = 1;
                                        while(topBooksRs.next()) {
                                
      out.write("\n");
      out.write("                                <tr>\n");
      out.write("                                    <td>\n");
      out.write("                                        <span class=\"badge ");
      out.print( rank <= 3 ? "bg-warning" : "bg-secondary" );
      out.write(" rounded-pill\">\n");
      out.write("                                            #");
      out.print( rank );
      out.write("\n");
      out.write("                                        </span>\n");
      out.write("                                    </td>\n");
      out.write("                                    <td>");
      out.print( topBooksRs.getString("book_name") );
      out.write("</td>\n");
      out.write("                                    <td>");
      out.print( topBooksRs.getString("author") );
      out.write("</td>\n");
      out.write("                                    <td>\n");
      out.write("                                        <span class=\"badge bg-info rounded-pill\">\n");
      out.write("                                            ");
      out.print( topBooksRs.getInt("total_sales") );
      out.write(" copies\n");
      out.write("                                        </span>\n");
      out.write("                                    </td>\n");
      out.write("                                    <td>\n");
      out.write("                                        <span class=\"badge bg-success rounded-pill\">\n");
      out.write("                                            $");
      out.print( String.format("%.2f", topBooksRs.getDouble("total_revenue")) );
      out.write("\n");
      out.write("                                        </span>\n");
      out.write("                                    </td>\n");
      out.write("                                </tr>\n");
      out.write("                                ");

                                            rank++;
                                        }
                                    } catch(Exception e) {
                                        out.println("<tr><td colspan='5' class='text-danger'>Error loading top books: " + e.getMessage() + "</td></tr>");
                                    }
                                
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
