/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-04 19:04:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Sign Up</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n");
      out.write("    <style>\n");
      out.write("        :root {\n");
      out.write("            --primary-color: #1a1a2e;\n");
      out.write("            --secondary-color: #16213e;\n");
      out.write("            --accent-color: #0f3460;\n");
      out.write("            --text-color: #e94560;\n");
      out.write("            --light-text: #f8f9fa;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        body {\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("            background-color: var(--primary-color);\n");
      out.write("            color: var(--light-text);\n");
      out.write("            min-height: 100vh;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .page-title {\n");
      out.write("            color: var(--text-color);\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 2rem;\n");
      out.write("            font-size: 2.5rem;\n");
      out.write("            font-weight: bold;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-container {\n");
      out.write("            background: var(--secondary-color);\n");
      out.write("            border-radius: 15px;\n");
      out.write("            padding: 2.5rem;\n");
      out.write("            margin: 2rem auto;\n");
      out.write("            max-width: 500px;\n");
      out.write("            width: 90%;\n");
      out.write("            box-shadow: 0 4px 15px rgba(0,0,0,0.2);\n");
      out.write("            transition: transform 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-container:hover {\n");
      out.write("            transform: translateY(-5px);\n");
      out.write("            box-shadow: 0 8px 25px rgba(0,0,0,0.3);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-label {\n");
      out.write("            color: var(--text-color);\n");
      out.write("            font-weight: 500;\n");
      out.write("            margin-bottom: 0.5rem;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control {\n");
      out.write("            background: rgba(255, 255, 255, 0.05);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("            color: var(--light-text);\n");
      out.write("            padding: 12px 20px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            margin-bottom: 1rem;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control:focus {\n");
      out.write("            background: rgba(255, 255, 255, 0.08);\n");
      out.write("            border-color: var(--text-color);\n");
      out.write("            color: var(--light-text);\n");
      out.write("            box-shadow: 0 0 0 0.25rem rgba(233, 69, 96, 0.25);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control::placeholder {\n");
      out.write("            color: rgba(248, 249, 250, 0.5);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-signup {\n");
      out.write("            background: var(--text-color);\n");
      out.write("            color: var(--light-text);\n");
      out.write("            border: none;\n");
      out.write("            padding: 12px 30px;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            font-weight: 500;\n");
      out.write("            width: 100%;\n");
      out.write("            margin-top: 1rem;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-signup:hover {\n");
      out.write("            background: #d03651;\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .login-link {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-top: 1.5rem;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .login-link a {\n");
      out.write("            color: var(--text-color);\n");
      out.write("            text-decoration: none;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .login-link a:hover {\n");
      out.write("            color: #d03651;\n");
      out.write("            text-decoration: underline;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .error { \n");
      out.write("            color: var(--text-color);\n");
      out.write("            background: rgba(233, 69, 96, 0.1);\n");
      out.write("            padding: 1rem;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            margin-bottom: 1rem;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .success { \n");
      out.write("            color: #28a745;\n");
      out.write("            background: rgba(40, 167, 69, 0.1);\n");
      out.write("            padding: 1rem;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            margin-bottom: 1rem;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .input-group-text {\n");
      out.write("            background: rgba(255, 255, 255, 0.05);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("            color: var(--text-color);\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <div class=\"form-container\">\n");
      out.write("            <h2 class=\"page-title\">Sign Up</h2>\n");
      out.write("            \n");
      out.write("            ");
      out.write("\n");
      out.write("            ");
 
                String error = request.getParameter("error");
                String message = request.getParameter("message");
                if (error != null && !error.isEmpty()) {
            
      out.write("\n");
      out.write("                <div class=\"error\">");
      out.print( error );
      out.write("</div>\n");
      out.write("            ");
 
                }
                if (message != null && !message.isEmpty()) {
            
      out.write("\n");
      out.write("                <div class=\"success\">");
      out.print( message );
      out.write("</div>\n");
      out.write("            ");
 
                }
            
      out.write("\n");
      out.write("            \n");
      out.write("            <form action=\"SignUpServlet\" method=\"post\">\n");
      out.write("                <div class=\"mb-3\">\n");
      out.write("                    <label for=\"username\" class=\"form-label\">\n");
      out.write("                        <i class=\"fas fa-user me-2\"></i>Username\n");
      out.write("                    </label>\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" required \n");
      out.write("                           placeholder=\"Enter username\">\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"mb-3\">\n");
      out.write("                    <label for=\"password\" class=\"form-label\">\n");
      out.write("                        <i class=\"fas fa-lock me-2\"></i>Password\n");
      out.write("                    </label>\n");
      out.write("                    <div class=\"input-group\">\n");
      out.write("                        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required \n");
      out.write("                               placeholder=\"Enter password\">\n");
      out.write("                        <span class=\"input-group-text\">\n");
      out.write("                            <i class=\"fas fa-eye\" id=\"togglePassword\" style=\"cursor: pointer;\"></i>\n");
      out.write("                        </span>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <button type=\"submit\" class=\"btn btn-signup\">\n");
      out.write("                    <i class=\"fas fa-user-plus me-2\"></i>Sign Up\n");
      out.write("                </button>\n");
      out.write("                \n");
      out.write("                <div class=\"login-link\">\n");
      out.write("                    Already have an account? <a href=\"login.jsp\">Login here</a>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        // Toggle password visibility\n");
      out.write("        document.getElementById('togglePassword').addEventListener('click', function() {\n");
      out.write("            const password = document.getElementById('password');\n");
      out.write("            const type = password.getAttribute('type') === 'password' ? 'text' : 'password';\n");
      out.write("            password.setAttribute('type', type);\n");
      out.write("            this.classList.toggle('fa-eye');\n");
      out.write("            this.classList.toggle('fa-eye-slash');\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
