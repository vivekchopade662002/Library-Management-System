/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-04 10:08:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import com.library.model.DBConnection;

public final class viewbooks_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.library.model.DBConnection");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    // Check if user is admin
    String userType = (String) session.getAttribute("userType");
    boolean isAdmin = userType != null && userType.equals("admin");

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>View Books - Library Management System</title>\n");
      out.write("    <!-- Bootstrap CSS -->\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <!-- Font Awesome -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n");
      out.write("    <style>\n");
      out.write("        :root {\n");
      out.write("            --primary-color: #1a1a2e;\n");
      out.write("            --secondary-color: #16213e;\n");
      out.write("            --accent-color: #0f3460;\n");
      out.write("            --text-color: #e94560;\n");
      out.write("            --light-text: #f8f9fa;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        body {\n");
      out.write("            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n");
      out.write("            min-height: 100vh;\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("            color: var(--light-text);\n");
      out.write("            padding-bottom: 2rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .navbar {\n");
      out.write("            background: rgba(255, 255, 255, 0.05);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("            padding: 1rem 0;\n");
      out.write("            margin-bottom: 2rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .navbar-nav .nav-link {\n");
      out.write("            color: var(--light-text);\n");
      out.write("            margin: 0 0.5rem;\n");
      out.write("            padding: 0.5rem 1rem;\n");
      out.write("            border-radius: 25px;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .navbar-nav .nav-link:hover {\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\n");
      out.write("            color: var(--text-color);\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .navbar-nav .nav-link.active {\n");
      out.write("            background: var(--text-color);\n");
      out.write("            color: var(--light-text);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .page-title {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 2rem;\n");
      out.write("            position: relative;\n");
      out.write("            padding-bottom: 1rem;\n");
      out.write("            color: var(--light-text);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .page-title::after {\n");
      out.write("            content: '';\n");
      out.write("            position: absolute;\n");
      out.write("            bottom: 0;\n");
      out.write("            left: 50%;\n");
      out.write("            transform: translateX(-50%);\n");
      out.write("            width: 100px;\n");
      out.write("            height: 3px;\n");
      out.write("            background: var(--text-color);\n");
      out.write("            border-radius: 3px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .books-container {\n");
      out.write("            background: rgba(255, 255, 255, 0.05);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("            border-radius: 15px;\n");
      out.write("            padding: 2rem;\n");
      out.write("            margin: 0 auto;\n");
      out.write("            max-width: 1200px;\n");
      out.write("            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .books-container:hover {\n");
      out.write("            transform: translateY(-5px);\n");
      out.write("            box-shadow: 0 25px 45px rgba(0, 0, 0, 0.3);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table {\n");
      out.write("            color: var(--light-text);\n");
      out.write("            margin-bottom: 0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table thead th {\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\n");
      out.write("            border-color: rgba(255, 255, 255, 0.1);\n");
      out.write("            color: var(--text-color);\n");
      out.write("            font-weight: 600;\n");
      out.write("            text-transform: uppercase;\n");
      out.write("            letter-spacing: 1px;\n");
      out.write("            padding: 1rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table tbody td {\n");
      out.write("            border-color: rgba(255, 255, 255, 0.1);\n");
      out.write("            padding: 1rem;\n");
      out.write("            vertical-align: middle;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table tbody tr {\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table tbody tr:hover {\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\n");
      out.write("            transform: scale(1.01);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table tbody tr:hover td {\n");
      out.write("            color: var(--text-color);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .book-id {\n");
      out.write("            font-weight: 600;\n");
      out.write("            color: var(--text-color);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .price-badge {\n");
      out.write("            background: var(--text-color);\n");
      out.write("            color: var(--light-text);\n");
      out.write("            padding: 0.5rem 1rem;\n");
      out.write("            border-radius: 25px;\n");
      out.write("            font-weight: 600;\n");
      out.write("            display: inline-block;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .price-badge:hover {\n");
      out.write("            transform: scale(1.1);\n");
      out.write("            box-shadow: 0 0 15px var(--text-color);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        @keyframes fadeIn {\n");
      out.write("            from { opacity: 0; transform: translateY(-10px); }\n");
      out.write("            to { opacity: 1; transform: translateY(0); }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table tbody tr {\n");
      out.write("            animation: fadeIn 0.5s ease forwards;\n");
      out.write("            opacity: 0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .table tbody tr:nth-child(1) { animation-delay: 0.1s; }\n");
      out.write("        .table tbody tr:nth-child(2) { animation-delay: 0.2s; }\n");
      out.write("        .table tbody tr:nth-child(3) { animation-delay: 0.3s; }\n");
      out.write("        .table tbody tr:nth-child(4) { animation-delay: 0.4s; }\n");
      out.write("        .table tbody tr:nth-child(5) { animation-delay: 0.5s; }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <!-- Navigation Bar -->\n");
      out.write("    <nav class=\"navbar navbar-expand-lg\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <a class=\"navbar-brand\" href=\"home.jsp\">\n");
      out.write("                <i class=\"fas fa-book-reader me-2\"></i>Library MS\n");
      out.write("            </a>\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("            </button>\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("                <ul class=\"navbar-nav ms-auto\">\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"home.jsp\">\n");
      out.write("                            <i class=\"fas fa-home me-1\"></i>Home\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link active\" href=\"viewbooks.jsp\">\n");
      out.write("                            <i class=\"fas fa-book me-1\"></i>View Books\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"search.jsp\">\n");
      out.write("                            <i class=\"fas fa-search me-1\"></i>Search\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                    ");

                    if (userType != null && userType.equals("admin")) {
                    
      out.write("\n");
      out.write("                        <li class=\"nav-item\">\n");
      out.write("                            <a class=\"nav-link\" href=\"admin-dashboard.jsp\">\n");
      out.write("                                <i class=\"fas fa-cog\"></i> Admin Dashboard\n");
      out.write("                            </a>\n");
      out.write("                        </li>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp\">\n");
      out.write("                            <i class=\"fas fa-sign-out-alt me-1\"></i>Logout\n");
      out.write("                        </a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <h2 class=\"page-title\">Books in the Library</h2>\n");
      out.write("        \n");
      out.write("        <div class=\"books-container\">\n");
      out.write("            <table class=\"table\">\n");
      out.write("                <thead>\n");
      out.write("                    <tr>\n");
      out.write("                        <th><i class=\"fas fa-hashtag me-2\"></i>Book ID</th>\n");
      out.write("                        <th><i class=\"fas fa-book me-2\"></i>Name</th>\n");
      out.write("                        <th><i class=\"fas fa-user me-2\"></i>Author</th>\n");
      out.write("                        <th><i class=\"fas fa-tag me-2\"></i>Price</th>\n");
      out.write("                    </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tbody>\n");
      out.write("                    ");

                        Connection conn = DBConnection.getConnection();
                        Statement stmt = conn.createStatement();
                        ResultSet rs = stmt.executeQuery("SELECT * FROM books");

                        while (rs.next()) {
                    
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td class=\"book-id\">#");
      out.print( rs.getInt("id") );
      out.write("</td>\n");
      out.write("                        <td>");
      out.print( rs.getString("name") );
      out.write("</td>\n");
      out.write("                        <td>");
      out.print( rs.getString("author") );
      out.write("</td>\n");
      out.write("                        <td><span class=\"price-badge\">$");
      out.print( String.format("%.2f", rs.getDouble("price")) );
      out.write("</span></td>\n");
      out.write("                    </tr>\n");
      out.write("                    ");
 
                        }
                    
      out.write("\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
